// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P1M3DevInCar.Context;

#nullable disable

namespace P1M3DevInCar.Migrations
{
    [DbContext(typeof(DevInCarContext))]
    partial class DevInCarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("P1M3DevInCar.Models.Camionete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("CapacidadeCarregamento")
                        .HasColumnType("real");

                    b.Property<string>("Combustivel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DetalheCamionete")
                        .HasColumnType("int");

                    b.Property<float>("Potencia")
                        .HasColumnType("real");

                    b.Property<int>("QtdePorta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DetalheCamionete");

                    b.ToTable("Camionetes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CapacidadeCarregamento = 10000f,
                            Combustivel = "Diesel",
                            DetalheCamionete = 3,
                            Potencia = 2000f,
                            QtdePorta = 2
                        });
                });

            modelBuilder.Entity("P1M3DevInCar.Models.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Combustivel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DetalheCarro")
                        .HasColumnType("int");

                    b.Property<float>("Potencia")
                        .HasColumnType("real");

                    b.Property<int>("QtdePorta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DetalheCarro");

                    b.ToTable("Carros");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Combustivel = "Flex",
                            DetalheCarro = 2,
                            Potencia = 1000f,
                            QtdePorta = 4
                        });
                });

            modelBuilder.Entity("P1M3DevInCar.Models.MotoTriciclo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DetalheMotoTriciclo")
                        .HasColumnType("int");

                    b.Property<float>("Potencia")
                        .HasColumnType("real");

                    b.Property<int>("QtdeRoda")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DetalheMotoTriciclo");

                    b.ToTable("MotoTriciclos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DetalheMotoTriciclo = 1,
                            Potencia = 100f,
                            QtdeRoda = 2
                        });
                });

            modelBuilder.Entity("P1M3DevInCar.Models.TipoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("TipoDeVeiculo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Tipo");

                    b.ToTable("TipoVeiculos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Tipo = 1,
                            TipoDeVeiculo = "Moto/Triciclo"
                        },
                        new
                        {
                            Id = 2,
                            Tipo = 2,
                            TipoDeVeiculo = "Carro"
                        },
                        new
                        {
                            Id = 3,
                            Tipo = 3,
                            TipoDeVeiculo = "Camionete"
                        });
                });

            modelBuilder.Entity("P1M3DevInCar.Models.TokenSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Audience")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issuer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TokenSettings");
                });

            modelBuilder.Entity("P1M3DevInCar.Models.User", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("P1M3DevInCar.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfComprador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataFabricacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetalheCamionete")
                        .HasColumnType("int");

                    b.Property<int?>("DetalheCarro")
                        .HasColumnType("int");

                    b.Property<int?>("DetalheMotoTriciclo")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroChassi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.Property<bool>("Venda")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cor = "Azul",
                            DataFabricacao = new DateTime(2022, 10, 20, 14, 3, 54, 516, DateTimeKind.Local).AddTicks(676),
                            DetalheMotoTriciclo = 1,
                            Nome = "Honda CG Titan",
                            NumeroChassi = "9BWHE21JX24064444",
                            Placa = "CCC1A11",
                            Tipo = 1,
                            Valor = 10000f,
                            Venda = false
                        },
                        new
                        {
                            Id = 2,
                            Cor = "Cinza",
                            DataFabricacao = new DateTime(2022, 10, 20, 14, 3, 54, 524, DateTimeKind.Local).AddTicks(3094),
                            DetalheCarro = 2,
                            Nome = "VW Gol",
                            NumeroChassi = "9BWHE21JX24060831",
                            Placa = "AAA1A11",
                            Tipo = 2,
                            Valor = 50000f,
                            Venda = false
                        },
                        new
                        {
                            Id = 3,
                            Cor = "Branca",
                            CpfComprador = "11111111100",
                            DataFabricacao = new DateTime(2022, 10, 20, 14, 3, 54, 524, DateTimeKind.Local).AddTicks(3796),
                            DetalheCamionete = 3,
                            Nome = "Chevrolet S10",
                            NumeroChassi = "9BWHE21JX24060333",
                            Placa = "BBB1A11",
                            Tipo = 3,
                            Valor = 100000f,
                            Venda = true
                        });
                });

            modelBuilder.Entity("P1M3DevInCar.Models.Camionete", b =>
                {
                    b.HasOne("P1M3DevInCar.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("DetalheCamionete")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("P1M3DevInCar.Models.Carro", b =>
                {
                    b.HasOne("P1M3DevInCar.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("DetalheCarro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("P1M3DevInCar.Models.MotoTriciclo", b =>
                {
                    b.HasOne("P1M3DevInCar.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("DetalheMotoTriciclo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("P1M3DevInCar.Models.TipoVeiculo", b =>
                {
                    b.HasOne("P1M3DevInCar.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("Tipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
